{"ast":null,"code":"var _jsxFileName = \"/Users/pranavchunduru/my-app/src/TeamsApp.js\";\nimport React, { useState, useEffect } from \"react\";\nimport DanceTeam from \"./components/DanceTeam\";\n/*\n  {\n    id: adfgsdfg,\n    name: \"TODO Item\",\n    checked: false,\n  }\n*/\n\nfunction uuidv4() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n        v = c == \"x\" ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n} //Gives unique id, name, and startnig value of checked.\n\n\nconst createDanceTeam = name => {\n  return {\n    id: uuidv4(),\n    name: name\n  };\n};\n\nconst TeamsApp = () => {\n  //Putting team name into local storage\n  useEffect(() => {\n    if (teamNames.length > 0) {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(teamNames));\n    }\n  }, [teamNames]); //Getting team names from local storage\n\n  useEffect(() => {\n    const fetchedTeamNames = localStorage.getItem(STORAGE_KEY);\n    setTeamNames(JSON.parse(fetchedTeamNames) || []);\n  }, []); //creates and adds createDanceTeam constant to the teamNames array\n\n  const addNewTeam = () => {\n    setTeamNames([...teamNames, createDanceTeam(newTeamName)]);\n  };\n\n  const STORAGE_KEY = \"teams\"; //Declaring State Variables\n  //Adjusting team array\n\n  const [teamNames, setTeamNames] = useState([]); //Setting new team name\n\n  const [newTeamName, setNewTeamName] = useState[\"\"]; //   const handleToggleChecked = (id) => {\n  //     const updatedTeams = teamNames.map((item) => {\n  //       if (item.id !== id) {\n  //         return item;\n  //       }\n  //       return {\n  //         ...item,\n  //         checked: !item.checked,\n  //       };\n  //     });\n  //     setTeamNames(updatedTeams);\n  //   };\n\n  console.log(teamNames);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newTeamName,\n    onChange: event => setNewTeamName(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addNewTeam,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"Submit Team\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Dance Teams\"), teamNames.map(item => {\n    return /*#__PURE__*/React.createElement(DanceTeam, {\n      id: item.id,\n      name: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nexport default TeamsApp;","map":{"version":3,"sources":["/Users/pranavchunduru/my-app/src/TeamsApp.js"],"names":["React","useState","useEffect","DanceTeam","uuidv4","replace","c","r","Math","random","v","toString","createDanceTeam","name","id","TeamsApp","teamNames","length","localStorage","setItem","STORAGE_KEY","JSON","stringify","fetchedTeamNames","getItem","setTeamNames","parse","addNewTeam","newTeamName","setNewTeamName","console","log","event","target","value","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAGA;;;;;;;;AAUA,SAASC,MAAT,GAAkB;AAChB,SAAO,uCAAuCC,OAAvC,CAA+C,OAA/C,EAAwD,UAAUC,CAAV,EAAa;AAC1E,QAAIC,CAAC,GAAIC,IAAI,CAACC,MAAL,KAAgB,EAAjB,GAAuB,CAA/B;AAAA,QACEC,CAAC,GAAGJ,CAAC,IAAI,GAAL,GAAWC,CAAX,GAAgBA,CAAC,GAAG,GAAL,GAAY,GADjC;AAEA,WAAOG,CAAC,CAACC,QAAF,CAAW,EAAX,CAAP;AACD,GAJM,CAAP;AAKD,C,CACD;;;AACA,MAAMC,eAAe,GAAIC,IAAD,IAAU;AAChC,SAAO;AACLC,IAAAA,EAAE,EAAEV,MAAM,EADL;AAELS,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID,CALD;;AAOA,MAAME,QAAQ,GAAE,MAChB;AACE;AACAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxBC,MAAAA,YAAY,CAACC,OAAb,CAAqBC,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeN,SAAf,CAAlC;AACD;AACF,GAJQ,EAIN,CAACA,SAAD,CAJM,CAAT,CAFF,CAQE;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,gBAAgB,GAAGL,YAAY,CAACM,OAAb,CAAqBJ,WAArB,CAAzB;AACAK,IAAAA,YAAY,CAACJ,IAAI,CAACK,KAAL,CAAWH,gBAAX,KAAgC,EAAjC,CAAZ;AACD,GAHQ,EAGN,EAHM,CAAT,CATF,CAcE;;AACA,QAAMI,UAAU,GAAG,MAAM;AAEvBF,IAAAA,YAAY,CAAC,CAAC,GAAGT,SAAJ,EAAeJ,eAAe,CAACgB,WAAD,CAA9B,CAAD,CAAZ;AACD,GAHD;;AAKA,QAAMR,WAAW,GAAG,OAApB,CApBF,CAqBE;AACA;;AACA,QAAK,CAACJ,SAAD,EAAYS,YAAZ,IAA4BxB,QAAQ,CAAC,EAAD,CAAzC,CAvBF,CAyBE;;AACA,QAAK,CAAC2B,WAAD,EAAcC,cAAd,IAAgC5B,QAAQ,CAAC,EAAD,CAA7C,CA1BF,CA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEE6B,EAAAA,OAAO,CAACC,GAAR,CAAYf,SAAZ;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEY,WAFT;AAGE,IAAA,QAAQ,EAAGI,KAAD,IAAWH,cAAc,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME;AAAQ,IAAA,OAAO,EAAEP,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF,EASGX,SAAS,CAACmB,GAAV,CAAeC,IAAD,IAAU;AAEvB,wBACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAEA,IAAI,CAACtB,EADX;AAEE,MAAA,IAAI,EAAEsB,IAAI,CAACvB,IAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD,GARA,CATH,CADF;AAqBD,CAnED;;AAqEA,eAAeE,QAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport DanceTeam from \"./components/DanceTeam\";\n\n\n/*\n  {\n    id: adfgsdfg,\n    name: \"TODO Item\",\n    checked: false,\n  }\n*/\n\n\n\nfunction uuidv4() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n//Gives unique id, name, and startnig value of checked.\nconst createDanceTeam = (name) => {\n  return {\n    id: uuidv4(),\n    name: name,\n  };\n};\n\nconst TeamsApp= () => \n{\n  //Putting team name into local storage\n  useEffect(() => {\n    if (teamNames.length > 0) {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(teamNames));\n    }\n  }, [teamNames]);\n\n  //Getting team names from local storage\n  useEffect(() => {\n    const fetchedTeamNames = localStorage.getItem(STORAGE_KEY);\n    setTeamNames(JSON.parse(fetchedTeamNames) || []);\n  }, []);\n\n  //creates and adds createDanceTeam constant to the teamNames array\n  const addNewTeam = () => {\n    \n    setTeamNames([...teamNames, createDanceTeam(newTeamName)]);\n  };\n\n  const STORAGE_KEY = \"teams\";\n  //Declaring State Variables\n  //Adjusting team array\n  const[teamNames, setTeamNames] = useState([]);\n\n  //Setting new team name\n  const[newTeamName, setNewTeamName] = useState[\"\"];\n\n\n//   const handleToggleChecked = (id) => {\n//     const updatedTeams = teamNames.map((item) => {\n//       if (item.id !== id) {\n//         return item;\n//       }\n//       return {\n//         ...item,\n//         checked: !item.checked,\n//       };\n//     });\n\n//     setTeamNames(updatedTeams);\n//   };\n\n  console.log(teamNames);\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={newTeamName}\n        onChange={(event) => setNewTeamName(event.target.value)}\n      />\n      <button onClick={addNewTeam}>Submit Team</button>\n\n      <h3>Dance Teams</h3>\n      {teamNames.map((item) => {\n        \n        return (\n          <DanceTeam\n            id={item.id}\n            name={item.name}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default TeamsApp;\n\n\n"]},"metadata":{},"sourceType":"module"}